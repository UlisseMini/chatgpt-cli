#!/usr/bin/python

import openai
import os

from textual.app import App, ComposeResult
from textual.widgets import MarkdownViewer, Input

class ChatGPT(App):
    TITLE = "ChatGPT CLI"

    def __init__(self):
        super().__init__()
        self.messages = [
            {"role": "system", "content": "You are a helpful assistant."},
        ]

    def compose(self) -> ComposeResult:
        yield MarkdownViewer()
        yield Input(name="input", placeholder="Ask a question...")


    async def on_mount(self):
        await self.update_markdown()
        self.query_one(Input).focus()

    async def update_markdown(self):
        md = f'# Welcome to ChatGPT'
        for message in self.messages:
            md += f'\n\n{message["role"].capitalize()}: {message["content"]}'
        await self.query_one(MarkdownViewer).document.update(md)


    async def on_input_submitted(self, event: Input.Submitted):
        self.messages.append({"role": "user", "content": event.value})
        event.input.value = ""
        await self.update_markdown()

        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=self.messages,
        )
        assistant_message = response.choices[0]['message'] # type: ignore
        self.messages.append(assistant_message)
        await self.update_markdown()


if __name__ == '__main__':
    openai.api_key = os.environ['OPENAI_API_KEY']
    app = ChatGPT()
    app.run()
